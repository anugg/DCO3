<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_nouin_nousvenafi_certificate_rqst</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_nouin_nousvenafi_certificate_rqst">statusCHANGESTOPending Revocation^EQ<item endquery="false" field="status" goto="false" newquery="false" operator="CHANGESTO" or="false" value="Pending Revocation"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Pending Revocation-DN</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var url = gs.getProperty('x_nouin_nousvenafi.venafi_url');
url = (url + 'authorize');
var uname = gs.getProperty('x_nouin_nousvenafi.uname');
var pwd = gs.getProperty('x_nouin_nousvenafi.password');
var mid_server = gs.getProperty('x_nouin_nousvenafi.midserver');
var count=0;

var payload = {"Username": String(uname),"Password": String(pwd)};
	var json = JSON.stringify(payload);
	var sm = new sn_ws.RESTMessageV2();
	sm.setEndpoint(url);
	sm.setHttpMethod("POST");
	sm.setRequestHeader('Content-Type','application/json');
	sm.setRequestBody(json);
	//if (!mid_server.isNil())
	sm.setMIDServer(mid_server);
	var response = sm.execute();
	
	var responseBody = response.getBody();
		
	responseBody = response.haveError() ? response.getErrorMessage() : response.getBody();
	var status = response.getStatusCode();
// 		gs.info(responseBody);
		
	var objJSON = JSON.parse(responseBody);//Parse JSON response
	var apiKey = objJSON.APIKey;
	
// gs.info('Response in Get API Key Call in BR:'+apiKey);
var certDN;
var requestBody;
var response1;
var responseBody1;
var status1;
var url1;
var sm1;
var venafi_url = gs.getProperty('x_nouin_nousvenafi.venafi_url');

sm1 = new sn_ws.RESTMessageV2();
sm1.setEndpoint(venafi_url+"Certificates/Request");
sm1.setHttpMethod("POST");
sm1.setRequestHeader('X-Venafi-Api-Key',apiKey);
sm1.setRequestHeader('Content-Type','application/json');
sm1.setMIDServer(mid_server);

var payload1 = {
		"PolicyDN": String(current.certificate_folder),
		"ObjectName": String(current.nickname),
		"Subject": String(current.common_name),
		"OrganizationalUnit": String(current.organization_unit),
		"Organization": String(current.organization),
		"City": String(current.city_locality),
		"State": String(current.state_province),
		"Country": String(current.country),
		"ManagementType": String(current.management_type),
		"KeyBitSize":  String(current.key_strength),
		

	};
	var json1 = JSON.stringify(payload1);
	gs.info("Certificate Request Requested body in BR:"+json1);
	sm1.setRequestBody(json1);
	response1 = sm1.execute();
	responseBody1 = response1.getBody();
var parser1 = JSON.parse(responseBody1);
// gs.info("Certificate Request Response body in BR:"+responseBody1);
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>anu.g</sys_created_by>
        <sys_created_on>2019-04-01 05:46:44</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>afef5c61db647b806ff7fd741d961930</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Pending Revocation-DN</sys_name>
        <sys_overrides/>
        <sys_package display_value="Digital Certificate Organizer" source="x_nouin_nousvenafi">16131e3fdb150300f74bf3d51d96191f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Digital Certificate Organizer">16131e3fdb150300f74bf3d51d96191f</sys_scope>
        <sys_update_name>sys_script_afef5c61db647b806ff7fd741d961930</sys_update_name>
        <sys_updated_by>sudhakar.c</sys_updated_by>
        <sys_updated_on>2019-04-29 07:53:09</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=afef5c61db647b806ff7fd741d961930"/>
</record_update>
